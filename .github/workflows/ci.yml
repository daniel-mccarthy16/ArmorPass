name: ArmorPass CI

on:
  pull_request:
    branches: [ master ]

run-name: CI for PR #${{ github.event.pull_request.number }} (${{ github.head_ref }}) by @${{ github.actor }}

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - name: Check formatting with rustfmt
      run: cargo fmt -- --check

    - name: Lint with clippy
      run: cargo clippy -- -D warnings

    - name: Audit Dependencies for Security Vulnerabilities
      run: |
        cargo install cargo-audit
        cargo audit

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose -- --test-threads=1

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Run cargo-tarpaulin
      run: cargo tarpaulin --out Xml --output-dir ./coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Build Linux x64 Binary
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        cargo build --target=x86_64-unknown-linux-gnu --release

    - name: Build Linux x86_64 Binary
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        cargo build --target=i686-unknown-linux-gnu --release

   - name: Upload Linux x64 Artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: linux-x64-binary
          path: target/x86_64-unknown-linux-gnu/release/ArmorPass

   - name: Upload Linux x86_64 Artifact
     if: github.event_name == 'push' && github.ref == 'refs/heads/master'
     uses: actions/upload-artifact@v2
     with:
       name: linux-x86_64-binary
       path: target/i686-unknown-linux-gnu/release/ArmorPass
